#include <stdio.h>
/*①取模判断是否为1，但仅限于所求数为正数*/
//int main()
//{
//    int a = 11;
//    int count = 0;
//   while(a)
//   {
//    if(a%2 == 1)
//    {count ++;
//    }
//    a = a/2;
//   }
//    printf("该二进制数中1的个数为：%d",count);
//    return 0;
//}


/*②所求数按位&，为1得1，为0得0。还要用到位移操作符。可用于计算负数二进制的1的个数*/
//int main()
//{
//    int num = -11;
//    int count = 0;
//    int i = 0;
//    for(i=0; i<32; i++)
//    {
//        if( ((num >> i)&1) ==1 )
//        count ++;
//    }
//    printf("该二进制数中1的个数为：%d",count);
//    return 0;
//}

 /*③按位&，不适用位移操作符; 自身减一再和自身&：num&(num-1),最终是和00000000 000000000....(32bit)与，最终结果得0。1的个数就是执行num&(num-1)的次数*/
 int main()
 {
     int num =-11;
     int count =0;
     while(num)
     {
         num = num & (num-1);
         count ++;
     }
     printf("该二进制数中1的个数为：%d",count);
     return 0;
 }
